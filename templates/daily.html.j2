<!doctype html>
<html lang="ja">
<head>
  <meta charset="utf-8" />
  <title>futuretech-stock — Daily Top 10 ({{ date | default('', true) }})</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <style>
    :root{
      --bg:#ffffff; --fg:#0f172a; --muted:#64748b; --border:#e5e7eb;
      --gold:#f5c542; --silver:#c0c7d1; --bronze:#d98c3f;
      --soft:#f8fafc; --ring:#e2e8f0;
      --ok:#10b981; --bad:#ef4444;
    }
    *{box-sizing:border-box}
    body{margin:0;font-family:ui-sans-serif,system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue",Arial;background:var(--bg);color:var(--fg)}
    .wrap{max-width:1100px;margin:0 auto;padding:20px}
    header{margin-bottom:16px}
    h1{font-size:22px;margin:0 0 6px;letter-spacing:-0.2px}
    .sub{color:var(--muted);font-size:12px}

    /* grid */
    .grid{display:grid;grid-template-columns:repeat(1,minmax(0,1fr));gap:12px}
    @media (min-width:900px){.grid{grid-template-columns:repeat(2,minmax(0,1fr))}}

    /* card */
    .card{position:relative;border:1px solid var(--border);border-radius:16px;padding:14px;background:#fff;box-shadow:0 1px 2px rgba(0,0,0,.03)}
    .row{display:flex;align-items:center;justify-content:space-between;gap:12px;flex-wrap:nowrap}
    .sym{display:flex;align-items:center;gap:10px;min-width:0}
    .symbol{font-size:clamp(16px,3.6vw,18px);font-weight:800;letter-spacing:.2px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:58vw}
    .name{font-size:12px;color:var(--muted);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:58vw}

    /* score block with subtle ring; emphasized for top1-3 */
    .score{text-align:right;display:flex;flex-direction:column;align-items:flex-end;line-height:1.05}
    .score .num{
      font-size:clamp(22px,4.6vw,28px);font-weight:900;letter-spacing:-.4px;
      padding:6px 10px;border-radius:12px;border:1px solid var(--ring);
      background:linear-gradient(180deg,#ffffff 0%,#f9fafb 100%);
    }
    .score.top1 .num{ border-color:#f59e0b44; box-shadow:0 0 0 4px #f59e0b1a; }
    .score.top2 .num{ border-color:#9ca3af44; box-shadow:0 0 0 4px #9ca3af1a; }
    .score.top3 .num{ border-color:#fb923c44; box-shadow:0 0 0 4px #fb923c1a; }
    .score .den{font-size:11px;color:var(--muted);margin-top:2px}

    /* ===== Rocket rank badges (circular) ===== */
    .rank-rocket{
      --size: clamp(48px, 12vw, 60px);
      width:var(--size); height:var(--size);
      border-radius:50%;
      display:flex; align-items:center; justify-content:center;
      position:relative; isolation:isolate;
      box-shadow:0 6px 18px rgba(0,0,0,.08) inset, 0 4px 10px rgba(0,0,0,.06);
      flex:0 0 auto;
      overflow:hidden;   /* 常に円形に収める */
    }
    /* Gold / Silver / Bronze backgrounds（視認性強化） */
    .rank1{ background:radial-gradient(120% 120% at 30% 20%, #fff8cc 0%, var(--gold) 55%, #caa32a 100%); }
    .rank2{ background:radial-gradient(120% 120% at 30% 20%, #ffffff 0%, var(--silver) 55%, #9aa3ad 100%); }
    .rank3{ background:radial-gradient(120% 120% at 30% 20%, #fff2e6 0%, var(--bronze) 55%, #b97736 100%); }
    .rankN{ background:#f3f4f6; }

    .rank-rocket svg{ width:calc(var(--size) * 0.56); height:calc(var(--size) * 0.56); filter:drop-shadow(0 2px 4px rgba(0,0,0,.18)); }
    .rank-rocket .num{
      position:absolute; right:-6px; bottom:-6px;
      width:20px; height:20px; border-radius:999px;
      background:#0f172a; color:#fff; font-weight:800; font-size:11px;
      display:flex; align-items:center; justify-content:center;
      border:2px solid #fff;
    }
    .rank-rocket .flame{ transform-origin:10px 18px; }

    /* Animations: 1=点火&上昇、2=ふわっと、3=点火準備（脈動） */
    .rank1 .rocket{ animation:lift 1.6s ease-in-out infinite; }
    .rank1 .flame{ animation:flicker .7s ease-in-out infinite; opacity:1; }
    .rank2 .rocket{ animation:floaty 2.4s ease-in-out infinite; }
    .rank2 .flame{ animation:flicker 1.1s ease-in-out infinite; opacity:.8; }
    .rank3 .rocket{ transform:rotate(12deg); }
    .rank3 .flame{ animation:pulse 1.6s ease-in-out infinite; opacity:.55; }

    @keyframes lift{
      0%{ transform:translateY(0) rotate(-4deg); }
      50%{ transform:translateY(-4px) rotate(0deg); }
      100%{ transform:translateY(0) rotate(-4deg); }
    }
    @keyframes floaty{
      0%{ transform:translateY(0) rotate(-2deg); }
      50%{ transform:translateY(-2px) rotate(2deg); }
      100%{ transform:translateY(0) rotate(-2deg); }
    }
    @keyframes flicker{
      0%,100%{ opacity:.95; transform:scale(1); }
      50%{ opacity:.55; transform:scale(.85); }
    }
    @keyframes pulse{
      0%,100%{ transform:scale(1); opacity:.55; }
      50%{ transform:scale(.9); opacity:.35; }
    }

    /* 右上リボンは削除（重なり対策） */
    .ribbon{ display:none !important; }

    /* price one-line row */
    .price-row{
      display:grid;
      grid-template-columns: repeat(3, minmax(0,1fr));
      align-items:center; gap:6px; margin-top:8px;
    }
    .pill{
      display:flex; align-items:center; justify-content:center; gap:6px;
      padding:6px 8px; border:1px solid var(--border); border-radius:999px;
      font-size:clamp(11px, 3.2vw, 12px); line-height:1; white-space:nowrap; min-width:0;
      background:#f8fafc; color:#111;
    }
    .pill .k{ color:var(--muted); }
    .pill.up{ border-color:#10b98133; background:#ecfdf5; color:#065f46 }
    .pill.down{ border-color:#ef444433; background:#fef2f2; color:#7f1d1d }
    .pill.flat{ color:#6b7280; background:#f8fafc }

    /* tabs: segmented buttons */
    .tabs{margin-top:12px}
    .seg{display:inline-flex;gap:0;border:1px solid var(--border);border-radius:12px;overflow:hidden;background:rgba(243,244,246,.6);backdrop-filter:saturate(1.1) blur(2px)}
    .seg .segbtn{
      appearance:none;border:0;margin:0;padding:8px 12px;background:transparent;cursor:pointer;
      font-size:12px;color:#111;line-height:1;display:flex;align-items:center;gap:8px;
    }
    .seg .segbtn:focus{outline:none;box-shadow:inset 0 0 0 2px rgba(0,0,0,.08)}
    .seg .segbtn[aria-pressed="true"]{
      background:#fff; font-weight:700;
      box-shadow:inset 0 0 0 1px var(--border);
    }
    .seg .ico{font-size:14px;opacity:.9}
    .tab{display:none}
    .tab.active{display:block}

    /* table etc */
    .chart{width:100%;border:1px solid var(--border);border-radius:10px}
    .table{width:100%;border-collapse:collapse;margin-top:6px}
    .table th,.table td{border-bottom:1px solid var(--border);padding:6px 8px;font-size:12px;text-align:left}
    .table th{color:var(--muted);font-weight:600}
    .right{text-align:right}
    .muted{color:var(--muted)}
    details{margin-top:6px;background:#fafafa;border:1px solid var(--border);border-radius:8px;padding:8px 10px}
    details>summary{cursor:pointer;font-size:12px;color:#111;user-select:none}
    .kv{display:grid;grid-template-columns:1fr 1fr;gap:6px;margin-top:8px}
    .kv div{font-size:12px;background:#fff;border:1px solid var(--border);border-radius:8px;padding:6px 8px}
    .kv .k{color:var(--muted)}
    .no-insider{flex:1;background:#f9fafb;border:1px dashed #d1d5db;border-radius:12px;padding:8px 10px;font-size:12px;color:#6b7280;font-style:italic;text-align:center}

    /* Smartphone tweaks */
    @media (max-width:420px){
      .row{ gap:10px }
      .symbol{ max-width:54vw }
      .name{ display:none }             /* 極小幅は社名省略で崩れ回避 */
      .score .num{ padding:4px 8px }
      .rank-rocket{ --size: 52px }
    }
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>futuretech-stock — Daily Top 10</h1>
      <div class="sub">Date: {{ date | default('', true) }} / Scoring: 1000 pts（volume + insider + trends + news）</div>
    </header>

    {% if top10 is defined %}
    <div class="grid" id="cards">
      {% for item in top10 %}
        {% set _sym  = item.symbol | default('', true) %}
        {% set _name = item.name   | default('', true) %}
        {% set rank = (item.rank | default(loop.index, true)) %}
        {% set chart_url = (item.chart_url | default('/charts/' ~ (date | default('', true)) ~ '/' ~ _sym ~ '.png', true)) %}
        {% set pts = item.score_pts | default((item.final_score_0_1|default(0,true) * 1000) | round(0, 'common'), true) %}
        {% set vol = (item.detail.vol_anomaly if (item.detail is defined and item.detail and item.detail.vol_anomaly is defined) else none) %}

        {# price delta sources (support both item.price_deltas.* or item.pct_* ) #}
        {% set _pd = item.price_deltas if item.price_deltas is defined else {} %}
        {% set p1d = (item.pct_1d if item.pct_1d is defined else (_pd.get('pct_1d') if _pd else none)) %}
        {% set p1w = (item.pct_1w if item.pct_1w is defined else (_pd.get('pct_1w') if _pd else none)) %}
        {% set p1m = (item.pct_1m if item.pct_1m is defined else (_pd.get('pct_1m') if _pd else none)) %}

        {% set d1cls = (p1d is not none and (p1d>0) and 'up' or (p1d is not none and p1d<0 and 'down' or 'flat')) %}
        {% set w1cls = (p1w is not none and (p1w>0) and 'up' or (p1w is not none and p1w<0 and 'down' or 'flat')) %}
        {% set m1cls = (p1m is not none and (p1m>0) and 'up' or (p1m is not none and p1m<0 and 'down' or 'flat')) %}
        {% set d1txt = (p1d is not none and ((p1d>0 and '+') or '') ~ ('%.2f'|format(p1d*100)) ~ '%' or '—') %}
        {% set w1txt = (p1w is not none and ((p1w>0 and '+') or '') ~ ('%.2f'|format(p1w*100)) ~ '%' or '—') %}
        {% set m1txt = (p1m is not none and ((p1m>0 and '+') or '') ~ ('%.2f'|format(p1m*100)) ~ '%' or '—') %}

        {# rank bg class #}
        {% set rank_class = 'rank1' if rank==1 else ('rank2' if rank==2 else ('rank3' if rank==3 else 'rankN')) %}

        <div class="card {% if rank<=3 %}is-top{% endif %}" id="card-{{ loop.index }}" data-symbol="{{ _sym }}">
          <div class="row">
            <div class="sym">
              <!-- Rank rocket (circular) -->
              <div class="rank-rocket {{ rank_class }}" aria-label="Rank {{ rank }}">
                <svg class="rocket" viewBox="0 0 24 24" role="img" aria-hidden="true">
                  <!-- body -->
                  <path d="M12 3c3 0 6 3.2 6 6.8 0 1.4-.4 2.8-1.1 4l-2.4 4c-.3.6-.9 1-1.6 1h-2.8c-.7 0-1.3-.4-1.6-1l-2.4-4A8.2 8.2 0 0 1 6 9.8C6 6.2 9 3 12 3Z" fill="#ffffff"/>
                  <!-- window -->
                  <circle cx="12" cy="9.5" r="2.2" fill="#94a3b8"/>
                  <!-- fins -->
                  <path d="M7.8 13.5l2.1 3.5H7.6a1 1 0 0 1-.9-1.4l1.1-2.1z" fill="#cbd5e1"/>
                  <path d="M16.2 13.5l-2.1 3.5h2.3c.8 0 1.3-.9.9-1.6l-1.1-1.9z" fill="#cbd5e1"/>
                  <!-- flame -->
                  <path class="flame" d="M11.2 20.5c-.8-1.2.6-2.4.8-2.9.2.5 1.6 1.7.8 2.9-.5.8-1.9.8-2.4 0z" fill="#f97316"/>
                </svg>
                <div class="num">{{ rank }}</div>
              </div>

              <div>
                <div class="symbol">{{ _sym }}</div>
                {% if _name %}<div class="name">{{ _name }}</div>{% endif %}

                <!-- price deltas row (one line) -->
                <div class="price-row">
                  <div class="pill {{ d1cls }}"><span class="k">1D</span><span class="v">{{ d1txt }}</span></div>
                  <div class="pill {{ w1cls }}"><span class="k">1W</span><span class="v">{{ w1txt }}</span></div>
                  <div class="pill {{ m1cls }}"><span class="k">1M</span><span class="v">{{ m1txt }}</span></div>
                </div>

                <!-- medals (Trends/News top3) -->
                <div class="medals" style="display:flex;gap:6px;margin-top:6px;flex-wrap:wrap"></div>
              </div>
            </div>

            <div class="score {% if rank==1 %}top1{% elif rank==2 %}top2{% elif rank==3 %}top3{% endif %}">
              <div class="num">{{ pts | int }}</div>
              <div class="den">/ 1000</div>
            </div>
          </div>

          <!-- segmented toggle buttons -->
          <div class="tabs">
            <div class="seg" role="tablist" aria-label="Card sections">
              <button class="segbtn" role="tab" aria-selected="false" aria-pressed="false"
                      data-target="#ov-{{ loop.index }}"><span class="ico">🧭</span>Overview</button>
              <button class="segbtn" role="tab" aria-selected="false" aria-pressed="false"
                      data-target="#tech-{{ loop.index }}"><span class="ico">📈</span>Weekly chart</button>
            </div>

            <!-- Overview: default CLOSED (no .active) -->
            <div id="ov-{{ loop.index }}" class="tab" role="tabpanel" aria-hidden="true">
              <!-- legend -->
              <p class="muted" style="font-size:12px; margin:6px 0 0;">
                • Price Δ: 1D = previous close → report-day close, 1W ≈ 5 trading days, 1M ≈ 21 trading days.<br/>
                • Volume anomaly: last 60 trading days (blend of RVOL20 & 60-day z-score).<br/>
                • Trends: Google Trends (3-month window, US). • News: Google News coverage (last {{ news_recent_days|default(5,true) }} days, percentile).
              </p>

              <table class="table js-breakdown">
                <thead>
                  <tr>
                    <th>Component</th>
                    <th class="right">Normalized</th>
                    <th class="right">Weight</th>
                    <th class="right">Contribution (pts)</th>
                  </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                  <tr>
                    <th colspan="3" class="right">Total</th>
                    <th class="right"><span class="js-total">{{ pts | int }}</span></th>
                  </tr>
                </tfoot>
              </table>

              <details>
                <summary>Volume anomaly details</summary>
                {% if vol %}
                  {% set rvol20 = vol.get('rvol20') %}
                  {% set z60 = vol.get('z60') %}
                  {% set pr90 = vol.get('pct_rank_90') %}
                  {% set dv = vol.get('dollar_vol') %}
                  {% set eligible = vol.get('eligible') %}
                  <div class="kv">
                    <div><span class="k">RVOL20</span><br>{{ rvol20 is not none and "%.2f"|format(rvol20) or "-" }}</div>
                    <div><span class="k">Z60</span><br>{{ z60 is not none and "%.2f"|format(z60) or "-" }}</div>
                    <div><span class="k">PctRank90</span><br>{{ pr90 is not none and "%.2f"|format(pr90) or "-" }}</div>
                    <div><span class="k">DollarVol</span><br>{% if dv is not none %}${{ "%.1f"|format(dv/1_000_000) }}M{% else %}-{% endif %}</div>
                    <div><span class="k">Eligible</span><br>{{ eligible and "Yes" or "No" }}</div>
                  </div>
                {% else %}
                  <div class="muted">No details.</div>
                {% endif %}
              </details>

              <details class="js-insider">
                <summary>Insider details (Form 4)</summary>
                <div class="muted">Loading…</div>
              </details>
            </div>

            <!-- Technical: default CLOSED -->
            <div id="tech-{{ loop.index }}" class="tab" role="tabpanel" aria-hidden="true">
              <img src="{{ chart_url }}" alt="{{ _sym }} weekly chart" class="chart" loading="lazy" />
            </div>
          </div>

          <!-- JSON payload -->
          <script type="application/json" class="js-payload">
          {{ {
            "symbol": _sym,
            "score_components": (item.score_components if item.score_components is defined else {}),
            "score_weights": (item.score_weights if item.score_weights is defined else {}),
            "final_score_0_1": item.final_score_0_1 | default(0, true),
            "score_pts": pts | int,
            "insider_momo": item.insider_momo | default(0, true),
            "trends_breakout": item.trends_breakout | default(0, true),
            "vol_anomaly_score": item.vol_anomaly_score | default(0, true),
            "news_score": item.news_score | default(0, true),
            "news_recent_count": item.news_recent_count | default(0, true)
          } | tojson }}
          </script>
        </div>
      {% endfor %}
    </div>
    {% else %}
      <div id="cards" class="grid"></div>
    {% endif %}
  </div>

  <script>
    // Segmented toggle: click to open, click again to close (default closed)
    function bindToggles(scope=document){
      scope.querySelectorAll(".card").forEach(card=>{
        const seg = card.querySelector(".seg");
        if(!seg) return;
        const buttons = [...seg.querySelectorAll(".segbtn")];
        const panels = [...card.querySelectorAll(".tab")];

        function openPanel(btn){
          const sel = btn.getAttribute("data-target");
          const panel = card.querySelector(sel);
          const isActive = panel.classList.contains("active");
          // reset all
          buttons.forEach(b=>{ b.setAttribute("aria-pressed","false"); b.setAttribute("aria-selected","false"); });
          panels.forEach(p=>{ p.classList.remove("active"); p.setAttribute("aria-hidden","true"); });
          // toggle on if currently closed
          if(!isActive){
            btn.setAttribute("aria-pressed","true");
            btn.setAttribute("aria-selected","true");
            panel.classList.add("active");
            panel.setAttribute("aria-hidden","false");
          }
        }

        // default: none active (keep closed)
        buttons.forEach(btn=>{
          btn.addEventListener("click", ()=> openPanel(btn));
          btn.addEventListener("keydown", (e)=>{
            if(e.key==="Enter"||e.key===" "){ e.preventDefault(); openPanel(btn); }
          });
        });
      });
    }

    // Breakdown (recompute points from embedded payload)
    function fillBreakdown(){
      document.querySelectorAll(".card").forEach(card=>{
        const payloadEl=card.querySelector(".js-payload");
        if(!payloadEl) return;
        let data={};
        try{ data=JSON.parse(payloadEl.textContent||"{}"); }catch(_){}
        const comps=data.score_components||{};
        const weights=data.score_weights||{};
        const keys=Object.keys(comps).filter(k=>comps[k]!=null);
        const wsum=keys.reduce((s,k)=>s+Math.max(0,Number(weights[k]||0)),0)||1;
        const tbody=card.querySelector(".js-breakdown tbody");
        const totalEl=card.querySelector(".js-total");
        if(!tbody) return;
        tbody.innerHTML="";
        let totalPts=0;
        const label=k=>({volume_anomaly:"Volume anomaly",insider_momo:"Insider momentum",trends_breakout:"Trends breakout",news:"News coverage"}[k]||k);
        keys.forEach(k=>{
          const v=Math.max(0,Math.min(1,Number(comps[k]||0)));
          const wn=Math.max(0,Number(weights[k]||0))/wsum;
          const pts=Math.round(v*wn*1000);
          totalPts+=pts;
          const tr=document.createElement("tr");
          tr.innerHTML=`<td>${label(k)}</td><td class="right">${v.toFixed(2)}</td><td class="right">${(wn*100).toFixed(0)}%</td><td class="right">${pts}</td>`;
          tbody.appendChild(tr);
        });
        if(totalEl) totalEl.textContent=String(totalPts);
      });
    }

    // Insider details (external JSON)
    async function fillInsiderDetails(){
      try{
        const res=await fetch(`/data/insider/form4_latest.json`,{cache:"no-store"});
        if(!res.ok) throw new Error("fetch insider json failed");
        const j=await res.json();
        const items=j.items||{};
        document.querySelectorAll(".card").forEach(card=>{
          const sym=card.getAttribute("data-symbol");
          const box=card.querySelector(".js-insider");
          if(!box) return;
          const rec=items[sym];
          if(!rec){ box.innerHTML=`<summary>Insider details (Form 4)</summary><div class="muted">No data</div>`; return; }
          box.innerHTML=`<summary>Insider details (Form 4)</summary>
            <div class="kv">
              <div><span class="k">Net buy (30d)</span><br>${(rec.net_buy_shares_30||0).toLocaleString()} shares</div>
              <div><span class="k">Net buy (90d)</span><br>${(rec.net_buy_shares_90||0).toLocaleString()} shares</div>
              <div><span class="k">Unique buyers (30d)</span><br>${(rec.buyers_30||0)}</div>
              <div><span class="k">Unique buyers (90d)</span><br>${(rec.buyers_90||0)}</div>
              <div><span class="k">Score 30</span><br>${Number(rec.score_30||0).toFixed(2)}</div>
              <div><span class="k">Score 90</span><br>${Number(rec.score_90||0).toFixed(2)}</div>
            </div>`;
        });
      }catch(e){
        document.querySelectorAll(".js-insider").forEach(box=>{
          box.innerHTML=`<summary>Insider details (Form 4)</summary><div class="muted">Failed to load</div>`;
        });
      }
    }

    // News/Trends medals (Top3)
    function decorateTop3Medals(){
      const cards=[...document.querySelectorAll(".card")].map(card=>{
        let data={};
        try{ data=JSON.parse(card.querySelector(".js-payload")?.textContent||"{}"); }catch(_){}
        return {
          card,
          symbol: card.getAttribute("data-symbol"),
          trends: Number(data.trends_breakout||0),
          news:   Number(data.news_score||0)
        };
      });
      const rankBy = (arr, key)=>
        [...arr].sort((a,b)=>Number(b[key])-Number(a[key]))
                .map((o,i)=>({...o,_rank:i+1}))
                .filter(o=>o[key]>0 && o._rank<=3);
      const tMap=new Map(rankBy(cards,"trends").map(o=>[o.symbol,o._rank]));
      const nMap=new Map(rankBy(cards,"news").map(o=>[o.symbol,o._rank]));
      const medalInfo = r => r===1?{cls:"gold",emoji:"🥇"}:r===2?{cls:"silver",emoji:"🥈"}:{cls:"bronze",emoji:"🥉"};
      cards.forEach(({card,symbol})=>{
        const box=card.querySelector(".medals"); if(!box) return;
        box.innerHTML="";
        const t=tMap.get(symbol); if(t){ const m=medalInfo(t); const el=document.createElement("span");
          el.className=`medal ${m.cls}`; el.title=`Trends Top #${t}`;
          el.innerHTML=`<span class="emoji">${m.emoji}</span><span class="label"><span class="kind">Trends</span></span>`;
          box.appendChild(el);
        }
        const n=nMap.get(symbol); if(n){ const m=medalInfo(n); const el=document.createElement("span");
          el.className=`medal ${m.cls}`; el.title=`News Top #${n}`;
          el.innerHTML=`<span class="emoji">${m.emoji}</span><span class="label"><span class="kind">News</span></span>`;
          box.appendChild(el);
        }
      });
    }

    // INIT
    bindToggles();
    fillBreakdown();
    fillInsiderDetails();
    decorateTop3Medals();
  </script>
</body>
</html>
