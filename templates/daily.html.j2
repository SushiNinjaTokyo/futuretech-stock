<!doctype html>
<html lang="ja">
<head>
  <meta charset="utf-8" />
  <title>futuretech-stock — Daily Top 10 ({{ date | default('', true) }})</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <style>
    :root {
      --bg: #ffffff; --fg: #0f172a; --muted: #64748b; --border: #e5e7eb;
      --gold: #f59e0b; --silver: #0f172a; --bronze:#fb923c;
      --chip:#f3f4f6;
    }
    body { margin:0; font-family: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial; background: var(--bg); color: var(--fg);}
    .wrap { max-width: 1100px; margin: 0 auto; padding: 20px; }
    header { margin-bottom: 16px; }
    h1 { font-size: 22px; margin: 0 0 6px 0; }
    .sub { color: var(--muted); font-size: 12px; }

    .grid { display: grid; grid-template-columns: repeat(1,minmax(0,1fr)); gap: 12px; }
    @media (min-width: 900px) { .grid { grid-template-columns: repeat(2,minmax(0,1fr)); } }

    .card { border: 1px solid var(--border); border-radius: 16px; padding: 16px; background: #fff; box-shadow: 0 1px 2px rgba(0,0,0,0.03); }
    .row { display:flex; align-items:center; justify-content:space-between; }
    .sym { display:flex; align-items:center; gap:10px; }
    .rank { width: 36px; height: 36px; border-radius: 999px; display:flex; align-items:center; justify-content:center; font-weight: 800; font-size: 13px; }
    .rank.gold   { background: var(--gold); color: #fff; }
    .rank.silver { background: var(--silver); color: #fff; }
    .rank.bronze { background: var(--bronze); color: #fff; }
    .rank.other  { background: #f3f4f6; color: #111827; }

    .symbol { font-size: 20px; font-weight: 700; }
    .name { font-size:12px; color: var(--muted); }

    .score { text-align:right; }
    .score .num { font-size: 34px; font-weight: 900; line-height: 1; letter-spacing: -0.5px; }
    .score .den { font-size: 11px; color: var(--muted); }

    .tabs { margin-top:12px; }
    .tab-buttons { display:flex; gap:8px; margin-bottom:8px; }
    .tab-btn { border:1px solid var(--border); border-radius:999px; padding:6px 10px; font-size:12px; background:#fff; cursor:pointer; }
    .tab-btn.active { background:#000; color:#fff; border-color:#000; }
    .tab { display:none; }
    .tab.active { display:block; }

    .badges { display:flex; flex-wrap:wrap; gap:8px; margin-bottom: 8px; }
    .badge { border:1px solid var(--border); border-radius:999px; padding:4px 10px; font-size:12px; background: var(--chip); }
    .badge strong { margin-right:6px; color: var(--muted); font-weight: 500; }

    .chart { width: 100%; border:1px solid var(--border); border-radius: 10px; }

    .table { width: 100%; border-collapse: collapse; margin-top: 6px; }
    .table th, .table td { border-bottom: 1px solid var(--border); padding: 6px 8px; font-size: 12px; text-align: left; }
    .table th { color: var(--muted); font-weight: 600; }
    .right { text-align: right; }
    .muted { color: var(--muted); }
    details { margin-top: 8px; background:#fafafa; border:1px solid var(--border); border-radius: 8px; padding: 8px 10px; }
    details > summary { cursor:pointer; font-size: 12px; color:#111; user-select: none; }
    .kv { display:grid; grid-template-columns: 1fr 1fr; gap:6px; margin-top:8px; }
    .kv div { font-size:12px; background:#fff; border:1px solid var(--border); border-radius:8px; padding:6px 8px; }
    .kv .k { color: var(--muted); }
    
    .no-insider {
      flex: 1;
      background: #f9fafb;
      border: 1px dashed #d1d5db;
      border-radius: 12px;
      padding: 10px 12px;
      font-size: 13px;
      color: #6b7280;
      font-style: italic;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>futuretech-stock — Daily Top 10</h1>
      <div class="sub">Date: {{ date | default('', true) }} / Scoring: 1000 pts（現在は出来高＋Insider＋Trends。将来さらに拡張）</div>
    </header>

    {% if top10 is defined %}
    <div class="grid" id="cards">
      {% for item in top10 %}
        {% set _sym  = item.symbol | default('', true) %}
        {% set _name = item.name   | default('', true) %}
        {% set rank = (item.rank | default(loop.index, true)) %}
        {% set chart_url = (item.chart_url | default('/charts/' ~ (date | default('', true)) ~ '/' ~ _sym ~ '.png', true)) %}
        {% set base0_1 = item.final_score_0_1 | default(item.vol_anomaly_score | default(0, true), true) %}
        {% set pts = item.score_pts | default((base0_1 * 1000) | round(0, 'common'), true) %}
        {% set vol = (item.detail.vol_anomaly if (item.detail is defined and item.detail and item.detail.vol_anomaly is defined) else none) %}
        {% set tier = 'other' %}
        {% if rank == 1 %}{% set tier = 'gold' %}
        {% elif rank == 2 %}{% set tier = 'silver' %}
        {% elif rank == 3 %}{% set tier = 'bronze' %}{% endif %}

        <div class="card" id="card-{{ loop.index }}" data-symbol="{{ _sym }}">
          <div class="row">
            <div class="sym">
              <div class="rank {{ tier }}">{{ rank }}</div>
              <div>
                <div class="symbol">{{ _sym }}</div>
                {% if _name %}<div class="name">{{ _name }}</div>{% endif %}
              </div>
            </div>
            <div class="score">
              <div class="num">{{ pts | int }}</div>
              <div class="den">/ 1000</div>
            </div>
          </div>

          <div class="tabs">
            <div class="tab-buttons">
              <button class="tab-btn active" data-target="#ov-{{ loop.index }}">Overview</button>
              <button class="tab-btn" data-target="#tech-{{ loop.index }}">Technical snapshot</button>
            </div>

            <!-- Overview: スコア内訳 + 詳細 -->
            <div id="ov-{{ loop.index }}" class="tab active">
              <div class="badges">
                <div class="badge"><strong>Total score</strong>{{ pts | int }}/1000</div>
                <div class="badge"><strong>Volume anomaly</strong>{{ "%.2f"|format(item.vol_anomaly_score | default(0, true)) }}</div>
                {% if (item.insider_momo | default(0, true)) > 0 %}
                  <div class="badge"><strong>Insider momo</strong>{{ "%.2f"|format(item.insider_momo | default(0, true)) }}</div>
                {% else %}
                  <div class="no-insider">✦ No recent insider buying detected</div>
                {% endif %}
                {% if (item.trends_breakout | default(0, true)) > 0 %}
                  <div class="badge"><strong>Trends breakout</strong>{{ "%.2f"|format(item.trends_breakout | default(0, true)) }}</div>
                {% endif %}
              </div>

              <!-- スコアブレークダウン（正規化重みで寄与点を再計算） -->
              <table class="table js-breakdown">
                <thead>
                  <tr>
                    <th>Component</th>
                    <th class="right">Value (0–1)</th>
                    <th class="right">Weight</th>
                    <th class="right">Contribution (pts)</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- JSで埋め込み -->
                </tbody>
                <tfoot>
                  <tr>
                    <th colspan="3" class="right">Total</th>
                    <th class="right"><span class="js-total">{{ pts | int }}</span></th>
                  </tr>
                </tfoot>
              </table>

              <!-- 詳細：Volume anomaly -->
              <details>
                <summary>Volume anomaly details</summary>
                {% if vol %}
                <div class="kv">
                  <div><span class="k">RVOL20</span><br>{{ "%.2f"|format(vol.rvol20 | default(0, true)) }}</div>
                  <div><span class="k">Z60</span><br>{{ "%.2f"|format(vol.z60 | default(0, true)) }}</div>
                  <div><span class="k">PctRank90</span><br>{{ (vol.pct_rank_90 is not none) and "%.2f"|format(vol.pct_rank_90) or "-" }}</div>
                  <div><span class="k">DollarVol</span><br>${{ "%.1f"|format((vol.dollar_vol | default(0, true))/1_000_000) }}M</div>
                  <div><span class="k">Eligible</span><br>{{ (vol.eligible | default(false, true)) and "Yes" or "No" }}</div>
                </div>
                {% else %}
                <div class="muted">詳細データはありません。</div>
                {% endif %}
              </details>

              <!-- 詳細：Insider（Form 4）— 後段JSが insider JSON から補完 -->
              <details class="js-insider">
                <summary>Insider details (Form 4)</summary>
                <div class="muted">読み込み中…</div>
              </details>
            </div>

            <!-- Technical: 週足チャート -->
            <div id="tech-{{ loop.index }}" class="tab">
              <img src="{{ chart_url }}" alt="{{ _sym }} weekly chart" class="chart" loading="lazy" />
            </div>
          </div>

          <!-- JSONデータを JS が読む（Undefined/Noneを安全化） -->
          <script type="application/json" class="js-payload">
          {{ {
            "symbol": _sym,
            "score_components": (item.score_components if item.score_components is defined else {}),
            "score_weights": (item.score_weights if item.score_weights is defined else {}),
            "final_score_0_1": item.final_score_0_1 | default(0, true),
            "score_pts": pts | int,
            "insider_momo": item.insider_momo | default(0, true),
            "trends_breakout": item.trends_breakout | default(0, true),
            "vol_anomaly_score": item.vol_anomaly_score | default(0, true)
          } | tojson }}
          </script>
        </div>
      {% endfor %}
    </div>

    {% else %}
    <!-- クライアント描画フォールバック（必要ならJSでカードを描画） -->
    <div id="cards" class="grid"></div>
    {% endif %}
  </div>

  <script>
    function bindTabs(scope = document) {
      scope.querySelectorAll(".tab-buttons").forEach(btns => {
        btns.querySelectorAll(".tab-btn").forEach(btn => {
          btn.addEventListener("click", () => {
            const card = btn.closest(".card");
            btns.querySelectorAll(".tab-btn").forEach(b => b.classList.remove("active"));
            btn.classList.add("active");
            card.querySelectorAll(".tab").forEach(t => t.classList.remove("active"));
            const target = card.querySelector(btn.getAttribute("data-target"));
            if (target) target.classList.add("active");
          });
        });
      });
    }
    bindTabs(document);

    // --- スコア内訳テーブル：存在する要素のみ重み正規化 → 1000点換算
    function fillBreakdown() {
      document.querySelectorAll(".card").forEach(card => {
        const payloadEl = card.querySelector(".js-payload");
        if (!payloadEl) return;
        let data = {};
        try { data = JSON.parse(payloadEl.textContent || "{}"); } catch (_) { data = {}; }
        const comps = data.score_components || {};
        const weights = data.score_weights || {};
        const keys = Object.keys(comps).filter(k => comps[k] !== null && comps[k] !== undefined);
        const wsum = keys.reduce((s,k)=> s + Math.max(0, Number(weights[k] || 0)), 0) || 1;
        const tbody = card.querySelector(".js-breakdown tbody");
        const totalEl = card.querySelector(".js-total");
        if (!tbody) return;
        tbody.innerHTML = "";
        let totalPts = 0;

        const label = (k) => ({
          volume_anomaly: "Volume anomaly",
          insider_momo: "Insider momentum",
          trends_breakout: "Trends breakout",
          news: "News",
          inst_delta: "Institutional ownership Δ",
        }[k] || k);

        keys.forEach(k => {
          const v = Math.max(0, Math.min(1, Number(comps[k] || 0)));
          const wn = Math.max(0, Number(weights[k] || 0)) / wsum;
          const pts = Math.round(v * wn * 1000);
          totalPts += pts;
          const tr = document.createElement("tr");
          tr.innerHTML = `
            <td>${label(k)}</td>
            <td class="right">${v.toFixed(2)}</td>
            <td class="right">${(wn*100).toFixed(0)}%</td>
            <td class="right">${pts}</td>
          `;
          tbody.appendChild(tr);
        });

        if (totalEl) totalEl.textContent = String(totalPts);
      });
    }

    // --- Insider details を EDGAR 集計JSONから補完表示
    async function fillInsiderDetails(asOfDate) {
      try {
        const res = await fetch(`/data/insider/form4_latest.json`, { cache: "no-store" });
        if (!res.ok) throw new Error("fetch insider json failed");
        const j = await res.json();
        const items = j.items || {};
        document.querySelectorAll(".card").forEach(card => {
          const sym = card.getAttribute("data-symbol");
          const box = card.querySelector(".js-insider");
          if (!box) return;
          const rec = items[sym];
          if (!rec) {
            box.innerHTML = `<summary>Insider details (Form 4)</summary><div class="muted">データなし</div>`;
            return;
          }
          const html = `
            <summary>Insider details (Form 4)</summary>
            <div class="kv">
              <div><span class="k">Net buy (30d)</span><br>${(rec.net_buy_shares_30||0).toLocaleString()} shares</div>
              <div><span class="k">Net buy (90d)</span><br>${(rec.net_buy_shares_90||0).toLocaleString()} shares</div>
              <div><span class="k">Unique buyers (30d)</span><br>${(rec.buyers_30||0)}</div>
              <div><span class="k">Unique buyers (90d)</span><br>${(rec.buyers_90||0)}</div>
              <div><span class="k">Score 30</span><br>${Number(rec.score_30||0).toFixed(2)}</div>
              <div><span class="k">Score 90</span><br>${Number(rec.score_90||0).toFixed(2)}</div>
            </div>
          `;
          box.innerHTML = html;
        });
      } catch (e) {
        document.querySelectorAll(".js-insider").forEach(box => {
          box.innerHTML = `<summary>Insider details (Form 4)</summary><div class="muted">読み込みに失敗しました</div>`;
        });
      }
    }

    fillBreakdown();
    fillInsiderDetails("{{ date | default('', true) }}");
  </script>
</body>
</html>
