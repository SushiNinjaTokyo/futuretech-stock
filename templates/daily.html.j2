<!doctype html>
<html lang="ja">
<head>
  <meta charset="utf-8" />
  <title>futuretech-stock — Daily Top 10 ({{ date | default('', true) }})</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <style>
    :root{
      --bg:#ffffff; --fg:#0f172a; --muted:#64748b; --border:#e5e7eb;
      --gold-1:#FFE58A; --gold-2:#FFC94A; --gold-3:#E6B800; /* richer gold */
      --silver-1:#F3F4F6; --silver-2:#D1D5DB; --silver-3:#A1A1AA;
      --bronze-1:#FFD5B0; --bronze-2:#FFB07A; --bronze-3:#D97B2D;
      --soft:#f8fafc;
      --ring:#e2e8f0;
      --green:#065f46; --green-bg:#ecfdf5; --green-b:#10b98133;
      --red:#7f1d1d; --red-bg:#fef2f2; --red-b:#ef444433;
    }
    *{box-sizing:border-box}
    body{margin:0;font-family:ui-sans-serif,system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue",Arial;background:var(--bg);color:var(--fg)}
    .wrap{max-width:1100px;margin:0 auto;padding:16px 14px}
    header{margin-bottom:12px}
    h1{font-size:20px;margin:0 0 4px;letter-spacing:-0.2px}
    .sub{color:var(--muted);font-size:12px}

    .grid{display:grid;grid-template-columns:repeat(1,minmax(0,1fr));gap:12px}
    @media (min-width:900px){.grid{grid-template-columns:repeat(2,minmax(0,1fr))}}

    .card{position:relative;border:1px solid var(--border);border-radius:16px;padding:14px;background:#fff;box-shadow:0 1px 2px rgba(0,0,0,.03)}
    .row{display:flex;align-items:center;gap:12px;flex-wrap:nowrap;justify-content:space-between}

    .sym{display:flex;align-items:center;gap:12px;min-width:0}

    /* ===== Rocket rank (perfect circle) ===== */
    .rank-rocket{
      --size:66px;
      width:var(--size);height:var(--size);border-radius:999px;position:relative;isolation:isolate;
      display:grid;place-items:center;overflow:hidden;
      box-shadow:
        inset 0 0 0 3px rgba(255,255,255,.9),
        0 10px 26px rgba(0,0,0,.10);
    }
    .rank-rocket .ring{
      position:absolute;inset:0;border-radius:999px;
      box-shadow:0 0 0 6px rgba(255,255,255,.6) inset, 0 0 80px 20px rgba(255,255,255,.25) inset;
      pointer-events:none;
    }
    /* Rank backgrounds: no “黒い楕円” などの余計なパーツは置かない */
    .rank1{background:
      radial-gradient(65% 65% at 30% 30%, var(--gold-1) 0%, var(--gold-2) 55%, var(--gold-3) 100%);
      box-shadow:0 0 0 2px #FFF inset, 0 0 0 10px rgba(255,215,0,.25) inset, 0 12px 30px rgba(230,184,0,.45);
    }
    .rank2{background:
      radial-gradient(65% 65% at 30% 30%, var(--silver-1) 0%, var(--silver-2) 55%, var(--silver-3) 100%);
      box-shadow:0 0 0 2px #FFF inset, 0 0 0 10px rgba(209,213,219,.22) inset, 0 10px 24px rgba(0,0,0,.15);
    }
    .rank3{background:
      radial-gradient(65% 65% at 30% 30%, var(--bronze-1) 0%, var(--bronze-2) 55%, var(--bronze-3) 100%);
      box-shadow:0 0 0 2px #FFF inset, 0 0 0 10px rgba(251,146,60,.22) inset, 0 10px 24px rgba(217,123,45,.35);
    }
    .rankN{background:#f3f4f6;box-shadow:inset 0 0 0 2px #fff, 0 3px 8px rgba(0,0,0,.06)}

    .rank-rocket svg{ width:36px;height:36px; filter:drop-shadow(0 2px 6px rgba(0,0,0,.20)); }
    .rank-rocket .flame{ transform-origin:12px 24px; }
    /* badge number for 4位以下のみ表示 */
    .rank-rocket .num{
      position:absolute; right:-6px; bottom:-6px;
      width:22px;height:22px;border-radius:999px;background:#0f172a;color:#fff;
      font-weight:800;font-size:11px;display:none;align-items:center;justify-content:center;border:2px solid #fff;
    }
    .rankN .num{display:flex}

    /* Animations:
       1位：点火＆上昇（強）
       2位：ふわっとホバリング（現在の1位アニメ）
       3位：点火準備（フレームゆらぎのみ）
    */
    .rank1 .rocket{ animation: ignite 1.8s ease-in-out infinite; }
    .rank2 .rocket{ animation: hover 1.8s ease-in-out infinite; }
    .rank3 .rocket{ animation: preignite 1.8s ease-in-out infinite; }
    .rank1 .flame{ animation: flame-strong .7s ease-in-out infinite; }
    .rank2 .flame{ animation: flame-soft .9s ease-in-out infinite; }
    .rank3 .flame{ animation: flame-faint 1.2s ease-in-out infinite; }

    @keyframes ignite{
      0%{ transform:translateY(0) rotate(-6deg) }
      35%{ transform:translateY(-5px) rotate(0deg) }
      70%{ transform:translateY(-8px) rotate(3deg) }
      100%{ transform:translateY(0) rotate(-6deg) }
    }
    @keyframes hover{
      0%{ transform:translateY(0) rotate(-4deg) }
      50%{ transform:translateY(-3px) rotate(0deg) }
      100%{ transform:translateY(0) rotate(-4deg) }
    }
    @keyframes preignite{
      0%{ transform:translateY(0) rotate(-2deg) }
      50%{ transform:translateY(-1px) rotate(1deg) }
      100%{ transform:translateY(0) rotate(-2deg) }
    }
    @keyframes flame-strong{
      0%,100%{ opacity:.95; transform:scale(1) }
      50%{ opacity:.55; transform:scale(.75) }
    }
    @keyframes flame-soft{
      0%,100%{ opacity:.8; transform:scale(.95) }
      50%{ opacity:.45; transform:scale(.75) }
    }
    @keyframes flame-faint{
      0%,100%{ opacity:.45; transform:scale(.7) }
      50%{ opacity:.25; transform:scale(.55) }
    }

    .symbol{font-size:20px;font-weight:900;letter-spacing:.2px}
    .name{font-size:13px;color:var(--muted);margin-top:2px}

    /* score block; 右端固定だが独立ボックスでチップと重ならない */
    .score{text-align:right;display:flex;flex-direction:column;align-items:flex-end;line-height:1.05;margin-left:auto}
    .score .num{
      font-size:30px;font-weight:900;letter-spacing:-.4px;
      padding:8px 12px;border-radius:14px;border:1px solid var(--ring);
      background:linear-gradient(180deg,#ffffff 0%,#f9fafb 100%);
      box-shadow:0 0 0 6px #fef3c7 inset; /* 薄い枠で背景と分離 */
    }
    .score .den{font-size:11px;color:var(--muted);margin-top:2px}

    /* price chips — 横1行で収まるようにサイズ調整 */
    .price-chips{display:flex;gap:8px;flex-wrap:nowrap;margin-top:8px;min-width:0}
    .pch{
      flex:0 1 auto; max-width:32%;
      font-size:12px;border:1px solid var(--border);padding:6px 10px;border-radius:999px;line-height:1;white-space:nowrap;
      display:inline-flex;gap:6px;align-items:center;justify-content:center;background:#eef2f7;color:#111;
    }
    .pch.up{border-color:var(--green-b);background:var(--green-bg);color:var(--green)}
    .pch.down{border-color:var(--red-b);background:var(--red-bg);color:var(--red)}
    .pch.neutral{color:#6b7280}
    .pch .k{opacity:.8}

    /* medals row (Top3 for Trends/News) */
    .medals{display:flex;gap:6px;margin-top:8px;flex-wrap:wrap}
    .medal{display:inline-flex;align-items:center;gap:6px;border:1px solid var(--border);background:#fff;border-radius:999px;padding:4px 10px;line-height:1}
    .medal .label{font-size:12px;letter-spacing:.2px}
    .medal .kind{font-size:12px;color:#111;text-transform:capitalize}
    .medal.gold{border-color:#f59e0b33;box-shadow:0 0 0 2px #f59e0b1a inset}
    .medal.silver{border-color:#9ca3af33;box-shadow:0 0 0 2px #9ca3af1a inset}
    .medal.bronze{border-color:#fb923c33;box-shadow:0 0 0 2px #fb923c1a inset}
    .medal .emoji{font-size:14px}

    /* tabs: segmented buttons; Overviewは初期非表示 */
    .tabs{margin-top:12px}
    .seg{display:inline-flex;gap:0;border:1px solid var(--border);border-radius:12px;overflow:hidden;background:rgba(243,244,246,.6);backdrop-filter:saturate(1.1) blur(2px)}
    .seg .segbtn{
      appearance:none;border:0;margin:0;padding:9px 14px;background:transparent;cursor:pointer;
      font-size:13px;color:#111;line-height:1;display:flex;align-items:center;gap:8px;
    }
    .seg .segbtn[aria-pressed="true"]{
      background:#fff;font-weight:700;box-shadow:inset 0 0 0 1px var(--border);
    }
    .seg .ico{font-size:16px}
    .tab{display:none}
    .tab.active{display:block}

    .chart{width:100%;border:1px solid var(--border);border-radius:10px}

    .table{width:100%;border-collapse:collapse;margin-top:6px}
    .table th,.table td{border-bottom:1px solid var(--border);padding:6px 8px;font-size:12px;text-align:left}
    .table th{color:var(--muted);font-weight:600}
    .right{text-align:right}
    .muted{color:var(--muted)}
    details{margin-top:6px;background:#fafafa;border:1px solid var(--border);border-radius:8px;padding:8px 10px}
    details>summary{cursor:pointer;font-size:12px;color:#111;user-select:none}
    .kv{display:grid;grid-template-columns:1fr 1fr;gap:6px;margin-top:8px}
    .kv div{font-size:12px;background:#fff;border:1px solid var(--border);border-radius:8px;padding:6px 8px}
    .kv .k{color:var(--muted)}
    .legend{margin-top:8px;font-size:11px;color:#475569;line-height:1.45}

    .no-insider{flex:1;background:#f9fafb;border:1px dashed #d1d5db;border-radius:12px;padding:8px 10px;font-size:12px;color:#6b7280;font-style:italic;text-align:center}

    /* モバイル最適化：行つめ＆フォント縮小で1行内に収める */
    @media (max-width:420px){
      .rank-rocket{ --size:60px }
      .symbol{font-size:18px}
      .pch{font-size:11px;padding:5px 8px;max-width:31%}
      .score .num{font-size:26px;padding:6px 10px}
      .seg .segbtn{padding:8px 12px;font-size:12px}
    }
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>futuretech-stock — Daily Top 10</h1>
      <div class="sub">Date: {{ date | default('', true) }} / Scoring: 1000 pts（volume + insider + trends + news）</div>
    </header>

    {% if top10 is defined %}
    <div class="grid" id="cards">
      {% for item in top10 %}
        {% set _sym  = item.symbol | default('', true) %}
        {% set _name = item.name   | default('', true) %}
        {% set rank = (item.rank | default(loop.index, true)) %}
        {% set chart_url = (item.chart_url | default('/charts/' ~ (date | default('', true)) ~ '/' ~ _sym ~ '.png', true)) %}
        {% set pts = item.score_pts | default((item.final_score_0_1|default(0,true) * 1000) | round(0, 'common'), true) %}
        {% set vol = (item.detail.vol_anomaly if (item.detail is defined and item.detail and item.detail.vol_anomaly is defined) else none) %}
        {% set c1d = item.change_1d | default(0,true) %}
        {% set c1w = item.change_1w | default(0,true) %}
        {% set c1m = item.change_1m | default(0,true) %}

        <div class="card" id="card-{{ loop.index }}" data-symbol="{{ _sym }}">
          <div class="row">
            <div class="sym">
              {# rank → rocket (Top1-3 は色背景、4位以下は灰・数字) #}
              {% set rank_class = 'rank1' if rank==1 else ('rank2' if rank==2 else ('rank3' if rank==3 else 'rankN') ) %}
              <div class="rank-rocket {{ rank_class }}" aria-label="Rank {{ rank }}">
                <svg class="rocket" viewBox="0 0 24 24" role="img" aria-hidden="true">
                  <path d="M12 3c3 0 6 3.2 6 6.8 0 1.4-.4 2.8-1.1 4l-2.4 4c-.3.6-.9 1-1.6 1h-2.8c-.7 0-1.3-.4-1.6-1l-2.4-4A8.2 8.2 0 0 1 6 9.8C6 6.2 9 3 12 3Z" fill="#ffffff"/>
                  <circle cx="12" cy="9.5" r="2.4" fill="#94a3b8"/>
                  <path d="M7.8 13.5l2.1 3.5H7.6a1 1 0 0 1-.9-1.4l1.1-2.1z" fill="#cbd5e1"/>
                  <path d="M16.2 13.5l-2.1 3.5h2.3c.8 0 1.3-.9.9-1.6l-1.1-1.9z" fill="#cbd5e1"/>
                  <path class="flame" d="M11.2 20.5c-.8-1.2.6-2.4.8-2.9.2.5 1.6 1.7.8 2.9-.5.8-1.9.8-2.4 0z" fill="#f97316"/>
                </svg>
                <div class="ring"></div>
                <div class="num">{{ rank }}</div>
              </div>

              <div style="min-width:0">
                <div class="symbol">{{ _sym }}</div>
                {% if _name %}<div class="name">{{ _name }}</div>{% endif %}
                <!-- Price changes (always in one row) -->
                <div class="price-chips">
                  <div class="pch {{ 'up' if c1d>0 else ('down' if c1d<0 else 'neutral') }}"><span class="k">1D</span> {{ '%+.2f'|format(c1d) }}%</div>
                  <div class="pch {{ 'up' if c1w>0 else ('down' if c1w<0 else 'neutral') }}"><span class="k">1W</span> {{ '%+.2f'|format(c1w) }}%</div>
                  <div class="pch {{ 'up' if c1m>0 else ('down' if c1m<0 else 'neutral') }}"><span class="k">1M</span> {{ '%+.2f'|format(c1m) }}%</div>
                </div>
                <!-- medals (filled by JS) -->
                <div class="medals"></div>
              </div>
            </div>

            <div class="score">
              <div class="num">{{ pts | int }}</div>
              <div class="den">/ 1000</div>
            </div>
          </div>

          <!-- Tabs (Overview closed by default) -->
          <div class="tabs">
            <div class="seg" role="tablist" aria-label="Card sections">
              <button class="segbtn" role="tab" aria-selected="false" aria-pressed="false"
                      data-target="#ov-{{ loop.index }}"><span class="ico">🧭</span>Overview</button>
              <button class="segbtn" role="tab" aria-selected="false" aria-pressed="false"
                      data-target="#tech-{{ loop.index }}"><span class="ico">📈</span>Weekly chart</button>
            </div>

            <div id="ov-{{ loop.index }}" class="tab" role="tabpanel" aria-hidden="true">
              <table class="table js-breakdown">
                <thead>
                  <tr>
                    <th>Component</th>
                    <th class="right">Normalized</th>
                    <th class="right">Weight</th>
                    <th class="right">Contribution (pts)</th>
                  </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                  <tr>
                    <th colspan="3" class="right">Total</th>
                    <th class="right"><span class="js-total">{{ pts | int }}</span></th>
                  </tr>
                </tfoot>
              </table>

              <details>
                <summary>Volume anomaly details</summary>
                {% if vol %}
                  {% set rvol20 = vol.get('rvol20') %}
                  {% set z60 = vol.get('z60') %}
                  {% set pr90 = vol.get('pct_rank_90') %}
                  {% set dv = vol.get('dollar_vol') %}
                  {% set eligible = vol.get('eligible') %}
                  <div class="kv">
                    <div><span class="k">RVOL20</span><br>{{ rvol20 is not none and "%.2f"|format(rvol20) or "-" }}</div>
                    <div><span class="k">Z60</span><br>{{ z60 is not none and "%.2f"|format(z60) or "-" }}</div>
                    <div><span class="k">PctRank90</span><br>{{ pr90 is not none and "%.2f"|format(pr90) or "-" }}</div>
                    <div><span class="k">DollarVol</span><br>{% if dv is not none %}${{ "%.1f"|format(dv/1_000_000) }}M{% else %}-{% endif %}</div>
                    <div><span class="k">Eligible</span><br>{{ eligible and "Yes" or "No" }}</div>
                  </div>
                {% else %}
                  <div class="muted">No details.</div>
                {% endif %}
              </details>

              <details class="js-insider">
                <summary>Insider details (Form 4)</summary>
                <div class="muted">Loading…</div>
              </details>

              <!-- Legend -->
              <div class="legend">
                <strong>Legend:</strong>
                <ul style="margin:6px 0 0 16px;padding:0">
                  <li>Price changes (1D/1W/1M): close-to-close vs prior US business day / 5 trading days / approx. 21 trading days as of the report window.</li>
                  <li>Volume anomaly: blend of RVOL20 and 60-day z-score; DollarVol percentile over last 90 trading days.</li>
                  <li>Trends: Google Trends (US, timeframe “today 3-m”), normalized across the universe.</li>
                  <li>News: Google News RSS coverage in last N days (sentiment-adjusted), percentile across the universe.</li>
                  <li>Insider: Form 4 momentum (30d/90d) aggregated by symbol.</li>
                  <li>All stats are evaluated up to the prior US business day relative to {{ date }}.</li>
                </ul>
              </div>
            </div>

            <div id="tech-{{ loop.index }}" class="tab" role="tabpanel" aria-hidden="true">
              <img src="{{ chart_url }}" alt="{{ _sym }} weekly chart" class="chart" loading="lazy" />
            </div>
          </div>

          <!-- JSON payload -->
          <script type="application/json" class="js-payload">
          {{ {
            "symbol": _sym,
            "score_components": (item.score_components if item.score_components is defined else {}),
            "score_weights": (item.score_weights if item.score_weights is defined else {}),
            "final_score_0_1": item.final_score_0_1 | default(0, true),
            "score_pts": pts | int,
            "insider_momo": item.insider_momo | default(0, true),
            "trends_breakout": item.trends_breakout | default(0, true),
            "vol_anomaly_score": item.vol_anomaly_score | default(0, true),
            "news_score": item.news_score | default(0, true),
            "news_recent_count": item.news_recent_count | default(0, true),
            "change_1d": c1d, "change_1w": c1w, "change_1m": c1m
          } | tojson }}
          </script>
        </div>
      {% endfor %}
    </div>
    {% else %}
      <div id="cards" class="grid"></div>
    {% endif %}
  </div>

  <script>
    // Segmented toggle: Overviewは初期「閉」
    function bindToggles(scope=document){
      scope.querySelectorAll(".card").forEach(card=>{
        const seg = card.querySelector(".seg");
        if(!seg) return;
        const buttons = [...seg.querySelectorAll(".segbtn")];
        const panels  = [...card.querySelectorAll(".tab")];

        // 初期は全て閉
        buttons.forEach(b=>{ b.setAttribute("aria-pressed","false"); b.setAttribute("aria-selected","false"); });
        panels.forEach(p=>{ p.classList.remove("active"); p.setAttribute("aria-hidden","true"); });

        function openPanel(btn){
          const sel = btn.getAttribute("data-target");
          const panel = card.querySelector(sel);
          const isActive = panel.classList.contains("active");
          // reset
          buttons.forEach(b=>{ b.setAttribute("aria-pressed","false"); b.setAttribute("aria-selected","false"); });
          panels.forEach(p=>{ p.classList.remove("active"); p.setAttribute("aria-hidden","true"); });
          // toggle
          if(!isActive){
            btn.setAttribute("aria-pressed","true");
            btn.setAttribute("aria-selected","true");
            panel.classList.add("active");
            panel.setAttribute("aria-hidden","false");
          }
        }

        buttons.forEach(btn=>{
          btn.addEventListener("click", ()=> openPanel(btn));
          btn.addEventListener("keydown", (e)=>{ if(e.key==="Enter"||e.key===" "){ e.preventDefault(); openPanel(btn); }});
        });
      });
    }

    // Breakdown (recompute points from embedded payload)
    function fillBreakdown(){
      document.querySelectorAll(".card").forEach(card=>{
        const payloadEl=card.querySelector(".js-payload");
        if(!payloadEl) return;
        let data={};
        try{ data=JSON.parse(payloadEl.textContent||"{}"); }catch(_){}
        const comps=data.score_components||{};
        const weights=data.score_weights||{};
        const keys=Object.keys(comps).filter(k=>comps[k]!=null);
        const wsum=keys.reduce((s,k)=>s+Math.max(0,Number(weights[k]||0)),0)||1;
        const tbody=card.querySelector(".js-breakdown tbody");
        const totalEl=card.querySelector(".js-total");
        if(!tbody) return;
        tbody.innerHTML="";
        let totalPts=0;
        const label=k=>({volume_anomaly:"Volume anomaly",insider_momo:"Insider momentum",trends_breakout:"Trends breakout",news:"News coverage"}[k]||k);
        keys.forEach(k=>{
          const v=Math.max(0,Math.min(1,Number(comps[k]||0)));
          const wn=Math.max(0,Number(weights[k]||0))/wsum;
          const pts=Math.round(v*wn*1000);
          totalPts+=pts;
          const tr=document.createElement("tr");
          tr.innerHTML=`<td>${label(k)}</td><td class="right">${v.toFixed(2)}</td><td class="right">${(wn*100).toFixed(0)}%</td><td class="right">${pts}</td>`;
          tbody.appendChild(tr);
        });
        if(totalEl) totalEl.textContent=String(totalPts);
      });
    }

    // Insider details (external JSON)
    async function fillInsiderDetails(){
      try{
        const res=await fetch(`/data/insider/form4_latest.json`,{cache:"no-store"});
        if(!res.ok) throw new Error("fetch insider json failed");
        const j=await res.json();
        const items=j.items||{};
        document.querySelectorAll(".card").forEach(card=>{
          const sym=card.getAttribute("data-symbol");
          const box=card.querySelector(".js-insider");
          if(!box) return;
          const rec=items[sym];
          if(!rec){ box.innerHTML=`<summary>Insider details (Form 4)</summary><div class="muted">No data</div>`; return; }
          box.innerHTML=`<summary>Insider details (Form 4)</summary>
            <div class="kv">
              <div><span class="k">Net buy (30d)</span><br>${(rec.net_buy_shares_30||0).toLocaleString()} shares</div>
              <div><span class="k">Net buy (90d)</span><br>${(rec.net_buy_shares_90||0).toLocaleString()} shares</div>
              <div><span class="k">Unique buyers (30d)</span><br>${(rec.buyers_30||0)}</div>
              <div><span class="k">Unique buyers (90d)</span><br>${(rec.buyers_90||0)}</div>
              <div><span class="k">Score 30</span><br>${Number(rec.score_30||0).toFixed(2)}</div>
              <div><span class="k">Score 90</span><br>${Number(rec.score_90||0).toFixed(2)}</div>
            </div>`;
        });
      }catch(e){
        document.querySelectorAll(".js-insider").forEach(box=>{
          box.innerHTML=`<summary>Insider details (Form 4)</summary><div class="muted">Failed to load</div>`;
        });
      }
    }

    // News/Trends medals (Top3)
    function decorateTop3Medals(){
      const cards=[...document.querySelectorAll(".card")].map(card=>{
        let data={};
        try{ data=JSON.parse(card.querySelector(".js-payload")?.textContent||"{}"); }catch(_){}
        return {
          card,
          symbol: card.getAttribute("data-symbol"),
          trends: Number(data.trends_breakout||0),
          news:   Number(data.news_score||0)
        };
      });
      const rankBy = (arr, key)=>
        [...arr].sort((a,b)=>Number(b[key])-Number(a[key]))
                .map((o,i)=>({...o,_rank:i+1}))
                .filter(o=>o[key]>0 && o._rank<=3);
      const tMap=new Map(rankBy(cards,"trends").map(o=>[o.symbol,o._rank]));
      const nMap=new Map(rankBy(cards,"news").map(o=>[o.symbol,o._rank]));
      const medalInfo = r => r===1?{cls:"gold",emoji:"🥇"}:r===2?{cls:"silver",emoji:"🥈"}:{cls:"bronze",emoji:"🥉"};
      cards.forEach(({card,symbol})=>{
        const box=card.querySelector(".medals"); if(!box) return;
        box.innerHTML="";
        const t=tMap.get(symbol); if(t){ const m=medalInfo(t); const el=document.createElement("span");
          el.className=`medal ${m.cls}`; el.title=`Trends Top #${t}`;
          el.innerHTML=`<span class="emoji">${m.emoji}</span><span class="label"><span class="kind">Trends</span></span>`;
          box.appendChild(el);
        }
        const n=nMap.get(symbol); if(n){ const m=medalInfo(n); const el=document.createElement("span");
          el.className=`medal ${m.cls}`; el.title=`News Top #${n}`;
          el.innerHTML=`<span class="emoji">${m.emoji}</span><span class="label"><span class="kind">News</span></span>`;
          box.appendChild(el);
        }
      });
    }

    // INIT
    bindToggles();
    fillBreakdown();
    fillInsiderDetails();
    decorateTop3Medals();
  </script>
</body>
</html>
