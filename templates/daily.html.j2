<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <title>FutureTech Stock ‚Äî Daily Top 10 ({{ date | default('', true) }})</title>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <style>
    :root{
      --bg:#0b0e14; --panel:#121826; --muted:#8aa0b6; --text:#e6eef7; --accent:#6ee7ff;
      --gold:#ffcf33; --silver:#c0c8d2; --bronze:#d69a6f; --green:#8ef0a5; --bar:#243247;
      --grad1:#1a2030; --grad2:#0f172a;
    }
    html,body{margin:0;padding:0;background:linear-gradient(180deg,var(--grad1),var(--grad2));color:var(--text);font:14px/1.6 system-ui,-apple-system,Segoe UI,Roboto,Inter,Helvetica,Arial;letter-spacing:.2px;}
    .wrap{max-width:1100px;margin:32px auto;padding:0 16px;}
    header.page{display:flex;justify-content:space-between;align-items:flex-end;margin-bottom:18px;border-bottom:1px solid #263246;padding-bottom:12px;}
    header.page h1{margin:0;font-weight:700;font-size:22px}
    header.page .date{color:var(--muted);font-size:13px}

    .grid{display:grid;grid-template-columns:repeat(2,1fr);gap:16px}
    @media (max-width:880px){.grid{grid-template-columns:1fr}}

    .card{background:var(--panel);border:1px solid #1f293b;border-radius:14px;padding:14px;position:relative;overflow:hidden}
    .card .rank-badge{position:absolute;top:8px;left:10px;background:#1e293b;border:1px solid #2a3a55;color:#9fb1c8;border-radius:999px;font-size:12px;padding:4px 8px}
    .card .hd{display:flex;align-items:center;gap:12px;margin-bottom:10px}
    .card .sym{font-weight:700;font-size:18px;letter-spacing:.5px}
    .card .name{color:var(--muted);font-size:12px}
    .card .scores{display:flex;gap:16px;flex-wrap:wrap;margin:6px 0 2px}
    .kpi{background:#0e1420;border:1px solid #1b2740;border-radius:10px;padding:8px 10px;min-width:120px}
    .kpi .tt{font-size:11px;color:#9fb1c8;margin-bottom:2px}
    .kpi .vv{font-size:16px;font-weight:700}
    .kpi .sub{font-size:11px;color:#9fb1c8}

    .breakdown{margin-top:6px}
    .row{display:grid;grid-template-columns:140px 1fr 50px;align-items:center;gap:10px;margin:6px 0}
    .row .lbl{color:#b3c3d7;font-size:12px}
    .bar{height:10px;background:var(--bar);border-radius:999px;position:relative;overflow:hidden;border:1px solid #2a3a55}
    .bar>i{display:block;height:100%;width:0;background:linear-gradient(90deg,#3db8ff,#7affc9);border-radius:999px}
    .row .pct{text-align:right;color:#9fb1c8;font-size:12px}

    .medals{display:flex;gap:6px;margin-top:8px;min-height:22px}
    .medal{display:inline-flex;align-items:center;gap:6px;border-radius:999px;border:1px solid #2a3a55;padding:2px 8px;font-size:12px}
    .medal .emoji{font-size:14px}
    .medal.gold{border-color:#5a490f;background:rgba(255,207,51,.08)}
    .medal.silver{border-color:#616873;background:rgba(192,200,210,.08)}
    .medal.bronze{border-color:#6d4b34;background:rgba(214,154,111,.08)}
    .medal .kind{color:#9fb1c8}

    /* üöÄ Rocket */
    .rocket{margin-left:auto;position:relative;display:flex;align-items:center;gap:6px}
    .rocket .em{font-size:26px;filter:drop-shadow(0 0 10px rgba(255,120,80,.25))}
    .rocket .flame{font-size:18px;opacity:.9;animation:flame .45s infinite ease-in-out}
    @keyframes flame{0%{transform:translateY(0) scale(1)}50%{transform:translateY(2px) scale(.9)}100%{transform:translateY(0) scale(1)}}

    /* 1‰Ωç„ÅØ„ÉâÊ¥æÊâã„É¢„Éº„Éâ */
    .rank-1 .rocket .em{font-size:54px;animation:float 1.8s ease-in-out infinite}
    .rank-1 .rocket .flame{font-size:42px;filter:blur(.3px) drop-shadow(0 0 18px rgba(255,120,80,.75));animation:flameBig .35s infinite ease-in-out}
    @keyframes float{0%{transform:translateY(0)}50%{transform:translateY(-5px)}100%{transform:translateY(0)}}
    @keyframes flameBig{0%{transform:translateY(0) scale(1)}50%{transform:translateY(4px) scale(.85)}100%{transform:translateY(0) scale(1)}}
    /* ‚Üì „Åì„Åì„Çí‰øÆÊ≠£ÔºàËá™Ë∫´„Å´‰∏°Êñπ„ÅÆ„ÇØ„É©„Çπ„Åå‰ªò„Åè„Åü„ÇÅÔºâ */
    .card.rank-1{border-color:#2e4d63;box-shadow:0 0 0 1px rgba(110,231,255,.15),0 18px 40px rgba(0,0,0,.35) inset}

    footer.note{margin:26px 0 40px;color:#b7c6d8;font-size:13px;border-top:1px solid #263246;padding-top:14px}
    footer.note h3{margin:0 0 6px 0;font-size:14px}
    footer.note ul{margin:8px 0 0 18px;padding:0}
    footer.note li{margin:6px 0}
    .muted{color:var(--muted)}
    .js-payload{display:none}
  </style>
</head>
<body>
  <div class="wrap">
    <header class="page">
      <h1>Daily Top 10</h1>
      <div class="date">Date: {{ date | default('', true) }}</div>
    </header>

    <section class="grid">
      {# Â§âÊï∞Âêç„Çí items‚Üítop10 „Å´Áµ±‰∏Ä #}
      {% for item in (top10 or []) %}
      {% set _sym = item.symbol | default('', true) %}
      {% set _nm  = item.name   | default('', true) %}
      {% set _rk  = item.rank   | default(0, true) %}
      {% set comps   = (item.score_components if item.score_components is defined else {}) %}
      {% set weights = (item.score_weights    if item.score_weights    is defined else {}) %}
      {% set vol = comps.volume_anomaly | default(0,true) %}
      {% set trd = comps.trends_breakout | default(0,true) %}
      {% set nws = comps.news | default(0,true) %}

      <article class="card rank-{{ _rk }}" data-symbol="{{ _sym }}">
        <span class="rank-badge">#{{ _rk }}</span>
        <div class="hd">
          <div>
            <div class="sym">{{ _sym }}</div>
            <div class="name">{{ _nm }}</div>
          </div>

          <div class="scores">
            <div class="kpi">
              <div class="tt">Final Score</div>
              <div class="vv">{{ (item.final_score_0_1 | default(0,true) * 100) | round(1) }}<span class="sub"> /100</span></div>
            </div>
            <div class="kpi">
              <div class="tt">Points</div>
              <div class="vv">{{ item.score_pts | default(0,true) }}</div>
            </div>
            <div class="kpi">
              <div class="tt">Œî Price</div>
              <div class="sub">
                1D: {{ item.price_delta_1d is not none and (item.price_delta_1d|round(2)|string + '%') or '‚Äî' }} /
                1W: {{ item.price_delta_1w is not none and (item.price_delta_1w|round(2)|string + '%') or '‚Äî' }} /
                1M: {{ item.price_delta_1m is not none and (item.price_delta_1m|round(2)|string + '%') or '‚Äî' }}
              </div>
            </div>
          </div>

          <div class="rocket" title="Top momentum">
            <span class="flame">üî•</span><span class="em">üöÄ</span>
          </div>
        </div>

        <div class="breakdown">
          <!-- Insider „ÅØ UI „Åã„ÇâÊí§Âéª„ÄÇË°®Á§∫„ÅØ Volume / Trends / News „ÅÆ„Åø -->
          <div class="row">
            <div class="lbl">Volume anomaly</div>
            <div class="bar"><i style="width: {{ (vol * 100) | round(1) }}%"></i></div>
            <div class="pct">{{ (vol * 100) | round(1) }}%</div>
          </div>
          <div class="row">
            <div class="lbl">Trends breakout</div>
            <div class="bar"><i style="width: {{ (trd * 100) | round(1) }}%"></i></div>
            <div class="pct">{{ (trd * 100) | round(1) }}%</div>
          </div>
          <div class="row">
            <div class="lbl">News</div>
            <div class="bar"><i style="width: {{ (nws * 100) | round(1) }}%"></i></div>
            <div class="pct">{{ (nws * 100) | round(1) }}%</div>
          </div>
          <div class="medals"></div>
        </div>

        <!-- JS„ÅåË™≠„ÇÄÂÆâÂÖ®„Å™JSON„ÄÇUndefined„ÇíÂá∫„Åï„Å™„ÅÑ -->
        <script type="application/json" class="js-payload">
        {{ {
          "symbol": _sym,
          "final_score_0_1": item.final_score_0_1 | default(0, true),
          "score_pts": item.score_pts | default(0, true),
          "score_components": comps | default({}, true),
          "score_weights": weights | default({}, true)
        } | tojson }}
        </script>
      </article>
      {% endfor %}
    </section>

    <footer class="note">
      <h3>How to read this page</h3>
      <ul>
        <li><strong>Final Score</strong> combines three signals: <em>Volume anomaly</em>, <em>Trends breakout</em>, and <em>News</em>. Each is normalized (0‚Äì100%) and weighted.</li>
        <li><strong>Volume anomaly</strong> = unusual trading activity. <strong>Trends breakout</strong> = recent search interest. <strong>News</strong> = timely, stock-specific headlines.</li>
        <li>We track AI, Robotics, and Space stocks. Rankings are within our <strong>daily list of stocks</strong>.</li>
        <li>A big üöÄ on Rank #1 highlights exceptional momentum today.</li>
      </ul>
      <p class="muted">This page is informational and not investment advice.</p>
    </footer>
  </div>

  <script>
    // ‰∏ä‰Ωç3‰Ωç„ÅÆ„É°„ÉÄ„É´„Çí Trends / News „Åù„Çå„Åû„Çå„Å´‰ªò‰∏éÔºàscore_components „ÇíÂèÇÁÖßÔºâ
    function decorateTop3Medals(){
      const cards = [...document.querySelectorAll(".card")].map(card=>{
        let data = {};
        try { data = JSON.parse(card.querySelector(".js-payload")?.textContent || "{}"); } catch(_) {}
        const comps = data.score_components || {};
        return {
          card,
          symbol: card.getAttribute("data-symbol"),
          trends: Number(comps.trends_breakout || 0),
          news:   Number(comps.news || 0)
        };
      });
      const rankBy = (arr, key) =>
        [...arr].sort((a,b)=>Number(b[key])-Number(a[key]))
                .map((o,i)=>({...o,_rank:i+1}))
                .filter(o=>o[key]>0 && o._rank<=3);
      const tMap = new Map(rankBy(cards,"trends").map(o=>[o.symbol,o._rank]));
      const nMap = new Map(rankBy(cards,"news").map(o=>[o.symbol,o._rank]));
      const medalInfo = r => r===1?{cls:"gold",emoji:"ü•á"}:r===2?{cls:"silver",emoji:"ü•à"}:{cls:"bronze",emoji:"ü•â"};
      cards.forEach(({card,symbol})=>{
        const box = card.querySelector(".medals"); if(!box) return;
        box.innerHTML = "";
        const t = tMap.get(symbol); if(t){ const m=medalInfo(t); const el=document.createElement("span");
          el.className=`medal ${m.cls}`; el.title=`Trends Top #${t}`;
          el.innerHTML=`<span class="emoji">${m.emoji}</span><span class="label"><span class="kind">Trends</span></span>`;
          box.appendChild(el);
        }
        const n = nMap.get(symbol); if(n){ const m=medalInfo(n); const el=document.createElement("span");
          el.className=`medal ${m.cls}`; el.title=`News Top #${n}`;
          el.innerHTML=`<span class="emoji">${m.emoji}</span><span class="label"><span class="kind">News</span></span>`;
          box.appendChild(el);
        }
      });
    }

    document.addEventListener("DOMContentLoaded", decorateTop3Medals);
  </script>
</body>
</html>
