name: daily-report

on:
  schedule:
    - cron: '10 22 * * *' # 18:10 ET / 07:10 JST
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: daily-report
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 1) ETの市場日付（"前営業日"）を確定させ、以降はこの値を使い回す
      - name: Set ET market date
        id: set_date
        run: |
          echo "REPORT_DATE=$(python scripts/et_market_date.py)" >> "$GITHUB_OUTPUT"
          echo "REPORT_DATE=$REPORT_DATE"

      # 2) DII（フェイルセーフ：なければ静かに0）を先に生成
      - name: Build DII (dark activity)
        env:
          OUT_DIR: site
          UNIVERSE_CSV: data/universe.csv
          REPORT_DATE: ${{ steps.set_date.outputs.REPORT_DATE }}
          # finra_api は無効化（ノイズ回避）。必要時は 'finra_api' に変更可（内部で静かにlatestへフォールバック）
          DII_SOURCE: skip
          DII_LOOKBACK_WEEKS: "12"
          DII_RECENT_WEEKS: "4"
        run: |
          python scripts/fetch_dii.py

      # 3) Google Trends（安全な小バッチ＋待機）
      - name: Google Trends breakout
        env:
          OUT_DIR: site
          UNIVERSE_CSV: data/universe.csv
          REPORT_DATE: ${{ steps.set_date.outputs.REPORT_DATE }}
          TRENDS_GEO: "US"
          TRENDS_TIMEFRAME: "today 3-m"
          TRENDS_BATCH: "3"
          TRENDS_SLEEP: "4.0"
          TRENDS_JITTER: "1.5"
          TRENDS_COOLDOWN_BASE: "45"
          TRENDS_COOLDOWN_MAX: "180"
          TRENDS_BATCH_RETRIES: "4"
        run: |
          python scripts/fetch_trends.py

      # 4) News（RSS + 簡易センチメント）
      - name: Fetch news
        env:
          OUT_DIR: site
          UNIVERSE_CSV: data/universe.csv
          REPORT_DATE: ${{ steps.set_date.outputs.REPORT_DATE }}
          NEWS_LOOKBACK_DAYS: "7"
          NEWS_MAX_PER_SYMBOL: "20"
          NEWS_SLEEP_SEC: "1.0"
        run: |
          python scripts/fetch_news.py

      # 5) Daily スコア合算 → Top10 JSON + チャート
      - name: Generate Top10 JSON
        env:
          OUT_DIR: site
          UNIVERSE_CSV: data/universe.csv
          REPORT_DATE: ${{ steps.set_date.outputs.REPORT_DATE }}
          MOCK_MODE: "false"
          WEIGHT_VOL_ANOM: "0.25"
          WEIGHT_DII: "0.25"
          WEIGHT_TRENDS: "0.30"
          WEIGHT_NEWS: "0.20"
        run: |
          python scripts/fetch_daily.py

      # 6) HTML 出力（Overview = daily ページ）
      - name: Render HTML
        env:
          REPORT_DATE: ${{ steps.set_date.outputs.REPORT_DATE }}
        run: |
          python scripts/render.py

      # 7) 成果物の検証
      - name: Verify outputs (ET market date)
        env:
          REPORT_DATE: ${{ steps.set_date.outputs.REPORT_DATE }}
        run: |
          echo "REPORT_DATE=$REPORT_DATE"
          ls -la site/daily || true
          echo "Checking file: site/daily/${REPORT_DATE}.html"
          test -f "site/daily/${REPORT_DATE}.html" || (echo "Expected file missing: site/daily/${REPORT_DATE}.html" && exit 1)

      # 8) コミット＆プッシュ（Vercel 側が pull → デプロイ想定）
      - name: Commit & Push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "chore: publish daily report" || echo "no changes"
          git push
